// Automatically generated by proto_gen
syntax = "proto3";

package neko.backup;


// DirEntry("NekoModels/BackupHistory.kt")
// Manually fixed; I don't know why it starts at 0 in the original source
// Should not be a big deal though
message BrokenBackupHistory {
    string url = 1;
    int64 lastRead = 2;
    int64 readDuration = 3;
}

message BackupHistory {
    string url = 1;
    int64 lastRead = 2;
    int64 readDuration = 3;
}

// DirEntry("NekoModels/BackupTracking.kt")
message BackupTracking {
    int32 syncId = 1;
    int64 libraryId = 2;
    int32 mediaIdInt = 3;
    string trackingUrl = 4;
    string title = 5;
    float lastChapterRead = 6;
    int32 totalChapters = 7;
    float score = 8;
    int32 status = 9;
    int64 startedReadingDate = 10;
    int64 finishedReadingDate = 11;
    int64 mediaId = 100;
}

// DirEntry("NekoModels/BackupManga.kt")
message BackupManga {
    int64 source = 1;
    string url = 2;
    string title = 3;
    string artist = 4;
    string author = 5;
    string description = 6;
    repeated string genre = 7;
    int32 status = 8;
    string thumbnailUrl = 9;
    string customCover = 10;
    int64 lastUpdate = 11;
    int64 lastInit = 12;
    int64 dateAdded = 13;
    int32 viewer = 14;
    int32 flags = 15;
    repeated BackupChapter chapters = 16;
    repeated int32 categories = 17;
    repeated BackupTracking tracking = 18;
    bool favorite = 100;
    int32 chapterFlags = 101;
    repeated BrokenBackupHistory brokenHistory = 102;
    int32 viewer_flags = 103;
    repeated BackupHistory history = 104;
    string customTitle = 800;
    string mergedMangaUrl = 900;
    string scanlatorFilter = 901;
    string mergedMangaImageUrl = 902;
    string alternativeArtwork = 903;
    repeated BackupMergeManga mergeMangaList = 904;
}

// DirEntry("NekoModels/BackupMergeManga.kt")
message BackupMergeManga {
    string url = 1;
    string title = 2;
    string coverUrl = 3;
    int32 mergeType = 4;
}

// DirEntry("NekoModels/BackupChapter.kt")
message BackupChapter {
    string url = 1;
    string name = 2;
    string scanlator = 3;
    bool read = 4;
    bool bookmark = 5;
    int32 lastPageRead = 6;
    int64 dateFetch = 7;
    int64 dateUpload = 8;
    float chapterNumber = 9;
    int32 sourceOrder = 10;
    int32 pagesLeft = 800;
}

// DirEntry("NekoModels/BackupCategory.kt")
message BackupCategory {
    string name = 1;
    int32 order = 2;
    // Manual change: no modern versions use this for updateInterval
    // Meanwhile, mainline Mihon uses this for category ID
    // int32 updateInterval = 3;
    optional int32 id = 3;
    int32 flags = 100;
    
    // Manual change: J2K-based forks use this for sort order
    optional int32 mangaSort = 800;
}

// DirEntry("NekoModels/Backup.kt")
message Backup {
    repeated BackupManga backupManga = 1;
    repeated BackupCategory backupCategories = 2;
}

